
- Protocol Stacks (Protokol Yığınları)
İnternet tasarlanırken birden fazla katmandan oluşarak tasarlanmıştır. Katman katmandan
tasarlanmıştır. Yani bir bilgisayarda internet girene kadar değişik katmanlardan 
geçen bilgi vardır.Katman katman olma sebebi ise en alt katman olan Physical Katmanını(Fiziksel Katman),
moduler yapmak ve boylelikle üst katmanların alt katmanlarla ilişkisi kesmek. Buna 
da abstruction yani Soyutlandırma denir . Soyutlama işlemi programalanın farklı
alanlarında da kullanılır. Her katman birbirleriyle bilgi alış-verişinde bulunur.

- Network Karmanı: IP Adresi Network Karmanında çalışır. Bir Ip adresi veriyoruz.
Mesala Dünyanın bir ucundan diğer ucundaki yere Paket gönderiyoruz. Ve paketlerin
nereden gidileceğini, nasıl gidileceğini, hangi yollarla gidileceğini, yolunu nasıl
bulacağı Network Katmanın problemlerindedir.

- Link Karmanı: Ethernet Protocol, Gidilecek yolu belirleme söz konusu. Ethernet bağlantısı
gibi düşünebilirsiniz. Bir Network'e bağlandığınız zaman o Network üzerinde her
bilgisayarın kendisine ait bazı paketler taşıması söz konusudur. Mesala bu paketler
nasıl dolaşak, o küçük Network içinde herkese bu paketler gönderilecek, İlgili kişi mi 
alacak, yoksa paketler birbirinin üzerinde atlayarak mı gidecek bu gibi konular Link
Katmanında.

- Physical(Fiziksel) Karmanı: Sinyal, Sinyal seviyesinde çalışır. 

- Application Katmanı: Üzerinde bir uygulama çalıştırıyoruz. Bu uygulama ise karşıdaki
uygulamayla iletişime geçiyor(konuşuyor).Örnegin Web Serverına bağlanıcaksınız, bilgi
sayardaki web browserınız sayesinde karşı tarafa bağlanabiliyorsunuz.Dolayısıyla 
burada uygulamalar birbirleriyle konuşuyorlar. Uygulamanın gönderdiği paketi anca
uygulama açar. Örnegin http protokolu ile uygulamalar konuşur çünkü ordaki konuşma 
protokolu http dir ve bu protokol ile konuşulur. 
Başka bir örnek Dosya Transferi (File Transfer Protocol (FTP)) gibi.

- ***Transport Karmanı: App. katmanı ve Network katmanı arasında veri alış-verişi dışında
Karşı taraftaki Transport Katmanı ile de konuşur. Örneğin bütün paketlerin sırayla
gelmesini, paketlerin hepsinin karşı tarafa ulaştığını gibi konuları Transport Katmanı
ilgilenir.


Aslında Trasnport Katmanında TCP(Transport Control Protocol)'den bahsedilir. 
Altında da IP vardır yani Network Katmanı vardır.Bu katmanda TCP olması şart değildir.
UDP(User Datagram Protocol)'de kullanılabilir TCP'nin UDP'den farkı ise sizin gönderdiğiniz paketlerin karşı
tarafa ulaştığını garanti ediyor olmasıdır. UDP'de ise işler boyle değildir paketlerin
hepsinin gitmesi şart değildir. Ne kadar paket alabilirse alır mantığı vardır.
Bu mantık nerelerde kullanılıyor mesela saniyede 60 frame gönderilen Görüntülü Sohbet
esnasında bir kopukluk olması halinde 1 frame kaybolması halinde ufak bir takilmadan 
sonra devam eder diğer framelere atlayabilir bu kabul edilebilir bir durumdur Dolayısıyla
her paketin gitmesi gerekmeyen protokollerde vardır UDP gibi. Ama TCP'nin özelliği
her paketi karşı tarafa gönderiyor olması.


Transport Layer: TCP(Transport Control Protocol)
- Veriyi paketlere bölüyor.
Eğer bir mailiniz var ve içinde binlerce sayfa yazı yazdınız, ve üstüne video eklediniz
bu büyük boyuttaki veriyi eğer bir bütün halinde gönderilirse yavaş ve verinin kaybolması
gibi riskler vardır. Bundan dolayı TCP datayı 1500Bit'lik paketlere bölüyor.

- Her paketi belli bir sıraya koyuyor. Her bir pakete bir numara veriyor çünkü 
karşı taraf bu paketleri aldığında sıraya koyması gerekiyor.

- Portların & Sessions Trafiğini Ayarlıyor: Yani iki tarafında Network üzerinde
hangi portlarda konuşacağını ayarlıyor. Network katmanında bir IP numrası verdik 
ama sadece IP numarası değil bunun üzerinde TCP portların ayarlanması gerekiyor.

(Port: Bir bilsayarın üzerinde birden fazla kapı olabilir, ve bu kapılardan içeriye 
giriliyor olabilir. Siz o bilgisayarda hangi kapıdan gireceğiniz ve onun cevabı 
sizin hangi kapınızdan giriceği iki tarafın portlarıyla oluyor. Burdaki IP numarası 
burdaki Ip ile konuşuyor ama aynı zamanda burdaki başka bir uygulama ordaki başka
bir uygulamayla da konuşabilir.Örnegin google ile bir arama yapıyorken google gmail 
ile maillerinizi indiriyorsunuz bunun gibi binlerce işlemin karışmamasının nedeni
ise bu kapı yanı port mantığnda saklıdır eğer 10 farklı işlem varsa bilgisayarınızda 
on tane çıkış noktası varsa diğer bilgisayarda da 10 tnae giriş noktası vardır. 
İste bunlara port diyoruz birbiriyle eşlesen port numaraları birbirleri dışında
konuşamazlar)

- Congestion(Tıkanıklık) Kontrolu
İnternetde bir şekilde çok yoğun paket geldi veya gönderidi ve bunlar kaldıramayacağınız 
kadar yani bant genişliğinizin kaldıramayacağı seviyede. Bunları gönderebilirz;
TCP o tıkanınıklıkları ona göre yavaşlatabiliryor ve dolayısıyla paketler kaybolmamaya
başlıyor. Bir paket niye kaybolur; Örneğin yolda giderken bir yere geldi ordan
diyelimki saniyede 100 paket geçebiliyor ama biz 500 paket gönderiyoruz. Buda ordaki 
en az 400 paketin 1sn beklemesi ve her saniye bu 400 paket birikecek orada ve 
paketlerin bi yaşam süresi vardır bunun sebebi ise orda dolaşmasın ve trafik yapmasın
belli bir süreden sonra bekletmemesidir amac orda, dolayısıyla o paketler orda Drop
ediliyor ve bundan dolayı paket kayboluyor bundan dolayı karşı tarafa ulaşamamış oluyor.
Karşı taraf paketi alamayınca TCP tekrar gönderilir ama azaltarak yani hızı yavaşlatarak
gönderir.


Transport Layer: TCP(2)

Handshake(El sıkışma Algoritmaları)

ilk olarak kuruluş sırasında yanı network paketleri göndermeye başladığında iki ağ
kurulurken, iki taraf birbiri ile iletişime geçerken:
Örnegin bir yere bağlanacaksınız ve oraya paket göndereceksiniz, ama orda gerçekten 
birileri var mı ? Bunu anlamanın yolu keşif için bir paket gitmeli ve orda birileri
var mı ? yoksa orda bağlatı yok ve oraya bağlanamıyorum diye bir hata vermebilir,
Örnegin paket oraya gitti sonra geri gelirken gelişte hata olabilir,
Dolayısıyla hem gidiş hem de gelişin Kontrolu hem de orada birinin varlığnın orda 
olmasının bi de dönüş protokolünün olması lazım. Dolayısıyla dönuş protokolunun 
bir hata olmadığının anlamamız için tekrar gidiş protokolu lazım oluyor.İşte Buna
Three Way Handshaking deniyor, yani 3 taraflı kontrol oluyor.
Yani bir siz gönderiyorsunuz karşı taraf teyit etmek için o da bir paket gönderiyor
geliş yolunun temiz oluduğunu anlamak için en sonda tekrar siz yine bir paket gönderiyorsunuz 
ve boylelikle 3 kere yaptıktan sonra bu iki tarafta birbiliryle ileşim kurabileceğine kanaat 
getirebiliyor buna da Üç taraflı el sıkışma deniliyor.
Bu işlemi bağlantıyı kurarken yapıyorsunuz  birde bağlantı bittiğinde yapıyorsunuz.
Bağlantı bittiğinde yapma sebebimiz ise karşı tarafın gönderebileceği paketin kalıp kalmadığnın
kontrol ediyor. Bu işlemden sonra iletişim bitiyor. 



Denial-of-Service Attacks (DOS)

File Transfer(Dosya Transfer)

Veriyi daha küçük bir paket boyutuna bölüyor, Sonra bu pakete bir IP header yani bir
başlık ekleniyor ve boyle gönderiliyor.
eğer paket hatalı veya bozuksa bunu düzeltmek TCP'nin görevi sıkıştırmak TCP'nin 
görevi.


**********************************************************

Açık Kaynak Bağlantısı (OSI) Modeli

OSI modeli, bilgilerin ağa bağlı bir bilgisayarda çalışan bir uygulamadan başka bir ağa bağlı bilgisayarda
çalışan bir uygulamaya nasıl geçtiğini açıklayan katmanlı bir modeldir. Bunu bu şekilde düşünün, OSI modeli,
verileri bir ağ cihazından diğerine aktarmak için kullanılacak adımları açıklar.

Model, aşağıda gösterildiği gibi yedi katmana bölünmüştür. 
Ağ iletişimi ve bilgi güvenliğini öğrenmek konusunda ciddiyseniz, tavsiyem bu resmi ezberlemektir. 
İlk başta uzun ve karmaşık göründüğünü biliyorum ve bana güven. Ama bunu ne kadar çok kullanırsanız (ve yapacaksınız) o kadar hızlı size gelecektir.

Katmanlı bir ağ kurma yaklaşımının kullanılmasının nedeni, katmanlı bir modelin veri iletişimi gibi bir görevi 
üstlenmesi ve onu her biri bağımsız olarak tanımlanmış ve geliştirilen bir dizi görev, faaliyet veya bileşenlere 
bölmesidir. OSI katmanları ayrıca genişletilebilirliğe izin verir. Yeni protokoller ve diğer ağ servisleri, katmanlı 
bir mimariye eklemek genellikle daha kolaydır.

OSI referans modelinin arkasındaki temel fikir şudur: Her katman bir tür işlemden sorumludur ve her katman yalnızca 
hemen altındaki ve üzerindeki katmanlarla konuşur. 
Örneğin, altıncı katman yalnızca yedinci ve beşinci katmanlarla ve asla doğrudan birinci katmanla konuşmayacaktır. Bunu hatırla ve kolaylaşır.

Bilgisayarınız ağa veri iletirken, belirli bir katman yukarıdaki katmandan veri alacak, aldığı şeyi işleyecek, 
bu özel katmanın sorumlu olduğu verilere bazı kontrol bilgileri ekleyecek ve yeni verileri bu yeni mesajla birlikte gönderecektir. 
Aşağıdaki katmana eklenen kontrol bilgileri.

Bilgisayarınız veri alırken, aksine işlem gerçekleşir. Belirli bir katman aşağıdaki katmandan veri alacak, aldığı bilgiyi işleyecek, 
kontrol bilgilerini bu özel katmanın sorumlu olduğu verilerden çıkaracak ve yeni verileri kontrol bilgisi olmadan yukarıdaki katmana gönderecektir.

Akılda tutulması gereken, her katmanın sorumlu olduğu kontrol bilgilerini eklemesi veya kaldırmasıdır. 
Modeli aşağıdan yukarıya hatırlamaya yardımcı olacak bir kısaltma “Lütfen Pizzaya Sosis Atmayın” dir.

Katman 1: Fiziksel (Physical)

Fiziksel katman, verilerin içinde geçtiği fiziksel ortamı tanımlar. 
Ethernet kablolarını, Ağ Arabirimi Denetleyicilerini ve benzeri şeyleri düşünün. Aynı zamanda ağ ve ağ iletişim cihazları arasındaki arayüzü sağlar.

Katman 2: Veri Bağlantısı (DataLink)

Veri bağlantısı katmanı, ağ paketlerinin fiziksel katman üzerinde iletilmek üzere ham bitlere (00110101) çevrildiği yerdir. 
Bu aynı zamanda, Medya Erişim Kontrolü adresleri olan en temel adresleme şemasını kullanan bir katmandır. 
Bir dalgıcın lisans numarası gibi bir MAC adresi düşünün – bu başkalarınınkinden benzersiz bir numaradır.

Şimdi, bir kişinin posta adresi gibi bir IP adresi düşünün. Posta adresi posta kodunu, şehri, eyaleti ve sokak 
tanımlayıcılarını kullanarak insanları bölgelere ayırır.
Katman 1 ve 2’nin Özeti

Bir ağ kartı ağ üzerinden bir bit akışı aldığında, verileri kablolardan (birinci katman) alır, 
ardından ikinci katman bu 1’ler ve 0’ları anlamaktan sorumludur. İkinci katman, verilerin o bilgisayar için tasarlandığından emin olmak için ilk önce çerçevedeki hedef MAC adresini kontrol eder. Hedef MAC adresi ağ kartının MAC adresi ile eşleşirse devam eder.

Katman 3: Ağ (Network)

Ağ katmanı, verilerin ağ aygıtları arasında nasıl iletileceğini belirler. Ayrıca, mantıksal adresi fiziksel adrese çevirir (bilgisayar adı MAC adresine). 
Rotayı tanımlamak, ağ sorunlarını yönetmek ve adreslemekten de sorumludur. Yönlendiriciler ayrıca ağ katmanı üzerinde de çalışır.

Bu üçüncü katmanı anlamanın en önemli kısmı, yönlendiricilerin üçüncü katmanın bilgisine dayanarak kararlar aldığını bilmektir. Yönlendiriciler, bir mantıksal ağdan diğerine nasıl bilgi gönderileceğine karar veren makinelerdir. Yönlendiriciler İnternet Protokolünü (IP) anlar ve bu bilgilere dayanarak yönlendirme kararlarını kullanır.

Katman 4: Taşıma (Transport)

Taşıma katmanı, oturum katmanından veri kabul eder ve paketlere böler ve bu paketleri ağ katmanına iletir. Hedef cihaza verilerin başarılı bir şekilde ulaşmasını sağlamak, taşıma katmanının sorumluluğundadır. Taşıma Katmanı Güvenliği de bu katman üzerinde çalışır.

Katman 5: Oturum (Session)

Oturum katmanı, bağlantı adı verilen iki iletişim noktası arasında bağlantı kurulmasını ve kaldırılmasını yönetir. İki uç nokta ileri geri iletişim kurarken bir bağlantı kurulur.

Buna bakmak için başka bir yol – bilgisayarınızı hayal edin. İnternette geziniyor, bir FTP sunucusundan indiriyor, biraz müzik yayını yapıyor ve aynı anda başka ne olduğunu bilen var. Tüm bu veriler bilgisayarınıza geliyor, ancak FTP verileri Pandora sekmenize gönderildiyse, bunun bir anlamı olmazdı, değil mi? Bu katmanda portlar kullanılıyor ve bu veriler doğru bir şekilde yönlendiriliyor.

Katman 6: Sunum (Presentation)

Sunum katmanı, uygulamadan ağ formatına geçerek veri sunumundaki farklılıkları giderir, bunun tersi de geçerlidir. Verileri uygulama katmanının kabul edebileceği formata dönüştürmek için çalışır. Unutmayın, her katman sadece üstündeki ve altındaki katmanla ‘konuşabilir’.

Bu katman temel olarak iletilen bilgilerin sözdizimi ve semantiği ile ilgilidir. Giden iletiler için, verileri iletim için genel bir biçime dönüştürür. Gelen mesajlar için, verileri alıcı uygulamaya anlaşılabilir bir formata dönüştürür. Bu katman aynı zamanda bir ağ üzerinden gönderilecek olan verileri biçimlendirir ve şifreler, bu da uyumluluk sorunlarından ve sorunlarından özgürlüğü sağlar.

Katman 7: Uygulama (Application)

Uygulama katmanı, modelin üst katmanıdır. Ağ servislerine erişim sağlamak için uygulamalara bir dizi arayüz sağlar. Bu katman aynı zamanda uygulama erişim güvenliği kontrolü ve bilgi doğrulama sağlar.


















Kaynak ve Hedef

Kaynak ve Hedef sütunları, başlıkta yer alan adresleri listeler. Size yönelik paketlerin dahili IP adresinizi göstereceğini fark edeceksiniz. Bunun nedeni, şu anda bir ağ içindeki kablosuz trafiği dinlememizdir ve bu nedenle yönlendiricinin arkasındadır. Alıcı bilgisayara gelen paketler yönlendirici tarafından ağ IP adresinden zaten çıkarılmıştır. OSI modelinin her katmanının yalnızca yukarıdaki ve altındaki katmanlarla nasıl konuşabileceğini unutmayın. Bunun nedeni, veriler katmanlarda yukarı ve aşağı hareket ederken kontrol bilgisinin kendisine eklenmesi ve geçtikçe sıyrılmasıdır.

Bunun yanında, alınan paketlerin Protokolünü listeler. Resimde, bilgi durumundaki TLSv1 ve Şifreli Uyarı yazdığı yere dikkat edin. TLS, Taşıma Katmanı Güvenliği anlamına gelir ve yukarıdan hatırlarsanız, taşıma katmanında çalışır.

Paket Genel Bakış

Bunun altında paketin genel bir özeti, size boyut ve hangi portlara adres verildiği gibi detayları verir. Girişlerden birine tıklayın ve klavye oklarınızı yukarı ve aşağı hareket ettirin. Vurgulanan harf ve sayı bloğunun bununla birlikte nasıl hareket ettiğini görün? Tüm bu karışık harfler ve sayılar aslında onaltılık koddur ve yanında verinin hızlı bir şekilde kodu çözülmüş bir özeti bulunmaktadır. Öğeler şifreli olarak iletiliyorsa, bu henüz yeterli olmayacak, ancak düz metin gönderilen herhangi bir şey burada görünecek.

Eylemde

Burada tarayıcımı açtım ve çubuğuna www.google.com yazdım. Darknet makalemde kısaca açıkladığım gibi, bilgisayarınız google.com ile ilişkili IP’yi bulmak için bir DNS sunucusuna istek gönderir. Sunucu daha sonra adresi size geri döndürür ve tarayıcınız ona bağlanır. Trafiği olduğu gibi koklayarak bunu eylemde görebiliriz.



Kapanış

Vay, bu uzun bir okuma oldu, ama umarım iyi bilgiyle doluydu. Trafiği koklamak, ağınızı test ederek sızıntılardan korumaktan, gözleriniz için olmayan verilere bakmaktan çok çeşitli nedenlerle yararlıdır. Gelecek hafta, kablosuz paketlerin gelişmiş yakalanması ve Wireshark’a biraz daha derinlemesine bakacağız.

Bundan daha önemlisi, aklınızdaki OSI Modeli için iyi bir giriş hakkınız var. Bu kavramı anlamanızın daha sonra yollarda size yardımcı olacağı konusunda yeterince stres içemiyorum.